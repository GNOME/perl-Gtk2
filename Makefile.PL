#
# $Header$
#

use 5.008;
use ExtUtils::MakeMaker;
use Cwd;
require '../Depends.pm';
use blib '../G';

$pkg = 'gtk+-2.0';

$incs = `pkg-config $pkg --cflags`;
chomp $incs;
die "*** can't find cflags for $pkg; is it properly installed? ***\n"
	unless $incs;

$libs = `pkg-config $pkg --libs`;
chomp $libs;
die "*** can't find libs for $pkg; is it properly installed? ***\n"
	unless $libs;

mkdir 'build', 0777;

#
# autogeneration
#
# genstuff.pl handles converting the map file into the cast macro header,
# typemap, and class registration code.
#
system 'perl ../helpers/genstuff.pl maps build/gtk2perl-autogen.h build/gtk2perl.typemap build/register.xsh'
	and die "couldn't run ../helpers/genstuff.pl to create cast macros and typemap\n";

# one more command generates code to boot all the various extra XS modules.
# we need this because we have lots of XS files without corresponding PMs to
# bootstrap them.
system 'perl ../helpers/genboot.pl > build/boot.xsh'
	and die "couldn't run ../helpers/genboot.pl\n";

# add some stuff to the include path so we can find the autogenerated files.
$incs .= ' -I. -I./build';

# now we're ready to start creating the makefile.
# we need to use ExtUtils::Depends to get relevant information out of
# the G extension, and to save config information for other modules which
# will chain from this one.

$gtk2 = ExtUtils::Depends->new ('Gtk2', 'G');
$gtk2->set_inc ($incs);
$gtk2->set_libs ($libs);
$gtk2->add_pm ('Gtk2.pm' => '$(INST_LIBDIR)/Gtk2.pm');
$gtk2->add_xs (<xs/*.xs>);
$gtk2->add_typemaps (map {cwd().'/'.$_} 'gdk.typemap', 'build/gtk2perl.typemap');
$gtk2->add_headers ('<gtk/gtk.h>', 'gtk2perl.h', 'build/gtk2perl-autogen.h');

$gtk2->install (qw(gtk2perl.h build/gtk2perl-autogen.h));
$gtk2->save_config ('build/IFiles.pm');

WriteMakefile(
    NAME          => 'Gtk2',
    VERSION_FROM  => 'Gtk2.pm', # finds $VERSION
    PREREQ_PM     => {}, # e.g., Module::Name => 1.1
    ABSTRACT_FROM => 'Gtk2.pm', # retrieve abstract from module
#    OBJECT        => '$(O_FILES)', # link all the C files too
    XSPROTOARG    => '-noprototypes',
    $gtk2->get_makefile_vars,
);

#
# there's a bug in the MakeMaker output which results in .xs files in a
# subdirectory being turned into .o files in this dir.  the bug is a missing
# -o on the compiler command line.  this is a hackish fix for it.
#
package MY;
sub const_cccmd {
	my $inherited = shift->SUPER::const_cccmd (@_);
	$inherited .= ' -o $@';
	$inherited;
}

#
# we need to use a module which will probably not be installed at test time.
# so, here's a nasty hack to add a few potential locations for G.pm and G.so
# to the call to test_harness.
#
sub test_via_harness {
	my $inherited = shift->SUPER::test_via_harness (@_);
	$inherited =~ s{test_harness\(\$\(\w+\),}{$& '../G/blib/lib', '../G/blib/arch', '../blib/lib', '../blib/arch',};
	$inherited;
}

package MAIN;
